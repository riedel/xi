package org.ananas.xi;import java.awt.*;public class EditorPanel   extends Panel{   private Ruleset[] rulesets = null;   private List rulesetsList,                matchesList,                groupesList;   private TextField namespaceURI,                     prefix,                     name,                     pattern;   public EditorPanel()   {      buildUI();   }   public void setRulesets(Ruleset[] rulesets)   {      this.rulesets = rulesets;      rulesetsList.removeAll();      matchesList.removeAll();      if(rulesets.length > 0)      {         for(int i = 0;i < rulesets.length;i++)            rulesetsList.add(rulesets[i].getLocalName());         for(int i = 0;i < rulesets[0].getMatchCount();i++)            matchesList.add(rulesets[0].getMatchAt(i).getLocalName());         groupesList.add("*** FILLER");         for(int i = 1;i <= rulesets[0].getMatchAt(0).getGroupCount();i++)            groupesList.add(rulesets[0].getMatchAt(0).getGroupNameAt(i).getLocalName());         groupesList.add("*** FILLER");      }   }   public Ruleset[] getRulesets()   {      return rulesets;   }   public void buildUI()   {      rulesetsList = new List();      matchesList = new List();      groupesList = new List();      namespaceURI = new TextField("http://ananas.org/2003/sample");      prefix = new TextField("an");      name = new TextField("TOTO-NAME");      pattern = new TextField(".16");            GridBagLayout layout = new GridBagLayout();      GridBagConstraints constraints = new GridBagConstraints();      setLayout(layout);            /*      add(new Label("Namespace URI:"));      constraints.gridwidth = GridBagConstraints.REMAINDER;      constraints.fill = GridBagConstraints.HORIZONTAL;      layout.setConstraints(namespaceURI,constraints);      add(namespaceURI);      add(new Label("Prefix:"));      layout.setConstraints(prefix,constraints);      add(prefix);      */      add(new Label("Ruleset"));      add(new Label("Match"));      add(new Label("Group"));      Panel panel = new Panel();      // added if the URI above are off      constraints.gridwidth = GridBagConstraints.REMAINDER;      constraints.fill = GridBagConstraints.HORIZONTAL;      // end of addition      layout.setConstraints(panel,constraints);      add(panel);      constraints.fill = GridBagConstraints.VERTICAL;      constraints.weighty = 1.0;      constraints.gridwidth = 1;      constraints.gridheight = 3;      layout.setConstraints(rulesetsList,constraints);      add(rulesetsList);      layout.setConstraints(matchesList,constraints);      add(matchesList);      constraints.gridwidth = GridBagConstraints.RELATIVE;      layout.setConstraints(groupesList,constraints);      add(groupesList);      constraints.weighty = 0.0;      constraints.gridheight = 1;      constraints.gridwidth = GridBagConstraints.REMAINDER;      constraints.fill = GridBagConstraints.HORIZONTAL;      layout.setConstraints(name,constraints);      add(name);      layout.setConstraints(pattern,constraints);      add(pattern);      Button button = new Button("Remove");      layout.setConstraints(button,constraints);      add(button);      add(new Button("Add"));      add(new Button("Add"));      add(new Button("Add"));      panel = new Panel();      constraints.fill = GridBagConstraints.NONE;      layout.setConstraints(panel,constraints);      add(panel);      add(new Panel());      add(new Panel());      add(new Button("Reset"));      add(new Button("Done"));   }}